/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.mycompany.photostorage;

import com.mycompany.photostorage.entity.Device;
import com.mycompany.photostorage.util.HibernateUtil;
import java.util.ArrayList;
import java.util.List;
import javax.swing.JOptionPane;
import org.hibernate.Query;
import org.hibernate.Session;

/**
 *  Class that allows user to close targeted device. That means any photo can no longer be movet to this device, but photos can be taken from it.
 * @author m_ligus
 */
public class CloseDevicePanel extends javax.swing.JPanel {

    /**
     * Creates new form CloseDevicePanel
     */
    public CloseDevicePanel() {
        initComponents();
        setDialogItems();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        closeDeviceComboBox = new javax.swing.JComboBox<>();
        cancelButton = new javax.swing.JButton();
        applyButton = new javax.swing.JButton();

        jLabel1.setText("Choose device to close:");

        cancelButton.setText("Cancel");

        applyButton.setText("Apply");
        applyButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                applyButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(36, 36, 36)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(cancelButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 179, Short.MAX_VALUE)
                        .addComponent(applyButton))
                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(closeDeviceComboBox, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(55, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(closeDeviceComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cancelButton)
                    .addComponent(applyButton))
                .addContainerGap(32, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    /**
     * Called after Apply button click
     * @param evt 
     */
    private void applyButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_applyButtonActionPerformed
        Object[] options = {"Yes", "No"};
        int x = JOptionPane.showOptionDialog(this,
                "Do you really want to close this device?",
                "Closing dialog",
                JOptionPane.DEFAULT_OPTION,
                JOptionPane.QUESTION_MESSAGE,
                null, options, options[1]);
        if (x == 0) {
            String deviceName = closeDeviceComboBox.getSelectedItem().toString();
            Device currentDevice = null;
            Session session = HibernateUtil.getSessionFactory().openSession();
            session.beginTransaction();
            Query query = session.createQuery("from Device");
            List<Device> databaseDevices = query.list();
            for (Device device : databaseDevices) {
                if (device.getName().equals(deviceName)) {
                    currentDevice = device; //device do zamkniecia
                    break;
                }
            }
            if (currentDevice.getIsClosed() == 1) {
                JOptionPane.showMessageDialog(this,
                        "Selected device is already closed.",
                        "Information",
                        JOptionPane.INFORMATION_MESSAGE);
                session.getTransaction().rollback();
                session.close();
            } else {
                currentDevice.setIsClosed((byte) 1);
                session.update(currentDevice);
                session.getTransaction().commit();
                session.close();
                JOptionPane.showMessageDialog(this,
                        "Device has been successfully closed",
                        "Success",
                        JOptionPane.INFORMATION_MESSAGE);
            }
        }


    }//GEN-LAST:event_applyButtonActionPerformed
    /**
     * Adds existing devices from database to combo box
     */
    private void setDialogItems() {
        Session session = HibernateUtil.getSessionFactory().openSession();
        session.beginTransaction();
        Query query = session.createQuery("from Device");
        List<Device> devices = new ArrayList<>();
        devices = query.list();
        for (Device device : devices) {
            closeDeviceComboBox.addItem(device.getName());
        }
        session.getTransaction().commit();
        session.close();
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton applyButton;
    private javax.swing.JButton cancelButton;
    private javax.swing.JComboBox<String> closeDeviceComboBox;
    private javax.swing.JLabel jLabel1;
    // End of variables declaration//GEN-END:variables
}
